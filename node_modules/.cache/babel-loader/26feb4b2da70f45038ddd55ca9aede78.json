{"ast":null,"code":"var _jsxFileName = \"/home/rokaia/Documents/Pacify-FrontEnd/src/Containers/ForgetPassword.js\";\nimport React, { Component } from 'react';\nimport './ForgetPassword.css';\n\nclass ForgetPassword extends Component {\n  constructor() {\n    super();\n\n    this.onForgetPasswordChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(this.state.email);\n    };\n\n    this.validate = () => {\n      if (!this.state.email) {\n        this.setState({\n          emailError: 'Please enter your username or email address'\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      email: '',\n      emailError: \"\",\n      MockBack: false,\n      ForgetPassword: false\n    };\n    this.SubmitForm = this.SubmitForm.bind(this);\n  }\n\n  SubmitForm(event) {\n    event.preventDefault();\n    const isValid = this.validate();\n\n    if (isValid) {\n      console.log(this.state); // clear form\n\n      this.setState({\n        emailError: ''\n      });\n    } else {\n      console.log('Invalid Form');\n    }\n\n    const {\n      email,\n      MockBack,\n      data\n    } = this.state;\n\n    if (!MockBack) {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Accept': 'application/json'\n        },\n        body: new URLSearchParams({\n          'emailUsername': email\n        })\n      };\n      fetch('http://23.96.41.241/api/password-reset', requestOptions).then(response => {\n        console.log(response);\n        return response.json();\n      }).then(result => {\n        console.log(\"wrong email\");\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.SubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"forget-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"forget-h1  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Password Reset\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"forget-p pr3 tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Enter your Spotify username, or the email address that you used to register. We'll send you an email with your username and a link to reset your password.\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"forget-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \" Email address or username \"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"email-input\",\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Email address or username\",\n      className: \"form-control\",\n      value: this.state.email,\n      onChange: this.onForgetPasswordChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, this.state.emailError), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"forget-button pb2 tc ml6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"SEND\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"forget-p pr6 pt3 tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"If you still need help, contact Spotify Support.\"))));\n  }\n\n}\n\nexport default ForgetPassword;","map":{"version":3,"sources":["/home/rokaia/Documents/Pacify-FrontEnd/src/Containers/ForgetPassword.js"],"names":["React","Component","ForgetPassword","constructor","onForgetPasswordChange","event","setState","target","name","value","console","log","state","email","validate","emailError","MockBack","SubmitForm","bind","preventDefault","isValid","data","requestOptions","method","headers","body","URLSearchParams","fetch","then","response","json","result","render","fontSize","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './ForgetPassword.css'\r\nclass ForgetPassword extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            email:'',\r\n            emailError: \"\",\r\n            MockBack: false,\r\n            ForgetPassword: false\r\n        }\r\n        this.SubmitForm = this.SubmitForm.bind(this)\r\n    }\r\n\r\n    onForgetPasswordChange=(event)=>{\r\n        this.setState({[event.target.name]: event.target.value })\r\n        console.log(this.state.email)\r\n    }\r\n    validate = () => {\r\n        if (!this.state.email) {\r\n            this.setState({emailError:'Please enter your username or email address'});\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    SubmitForm(event){\r\n        event.preventDefault()\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n        console.log(this.state);\r\n        // clear form\r\n        this.setState({emailError:''});\r\n        }\r\n        else{\r\n            console.log('Invalid Form');\r\n        }\r\n        const {email , MockBack, data} = this.state\r\n        \r\n        if (!MockBack){\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { \r\n                'Content-Type': 'application/x-www-form-urlencoded',  \r\n                'Accept': 'application/json'},\r\n                body: new URLSearchParams({\r\n                    'emailUsername':email,})\r\n            };\r\n            fetch('http://23.96.41.241/api/password-reset', requestOptions)\r\n            .then(response => {\r\n                console.log(response)\r\n                return response.json()\r\n            })\r\n            .then((result)=>{\r\n                console.log(\"wrong email\")\r\n            })\r\n            \r\n        }\r\n    \r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <form onSubmit={this.SubmitForm}>\r\n            <div class='forget-container'>\r\n                <div> \r\n                    <div className=\"pl5\">\r\n                <h1 className='forget-h1  ' >Password Reset</h1>\r\n                </div>\r\n                <p className='forget-p pr3 tc' >Enter your Spotify username, or the email address that you used to register. We'll send you an email with your username and a link to reset your password.</p>\r\n                </div> \r\n                <div>\r\n                    <label className='forget-label' > Email address or username </label>\r\n                    <input\r\n                        className='email-input'\r\n                        type=\"text\"\r\n                        name='email'\r\n                        placeholder='Email address or username'\r\n                        className=\"form-control\"\r\n                        value={this.state.email}\r\n                        onChange={this.onForgetPasswordChange}\r\n                    />\r\n                </div>\r\n                <div style={{ fontSize: 12, color: \"red\" }}>\r\n                    {this.state.emailError}\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <button type='submit' className=\"forget-button pb2 tc ml6\">SEND</button>\r\n                    <p className='forget-p pr6 pt3 tc' >If you still need help, contact Spotify Support.</p>\r\n                </div>\r\n            </div> \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForgetPassword;"]},"metadata":{},"sourceType":"module"}