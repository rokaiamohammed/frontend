{"ast":null,"code":"var _jsxFileName = \"/home/rokaia/Documents/frontend/src/Components/LoginForm.js\";\nimport React, { Component } from 'react';\nimport './Login.css';\nimport { Link, Redirect } from 'react-router-dom';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLoginChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(this.state.data);\n    };\n\n    this.validate = () => {\n      let eError = '';\n      let pError = '';\n\n      if (!this.state.email) {\n        eError = 'Please enter your username or email address.';\n      }\n\n      if (!this.state.password) {\n        pError = 'Please enter your password.';\n      }\n\n      if (this.state.password.length < 8 && this.state.password.length >= 1) {\n        pError = 'The Password is too short.';\n      }\n\n      if (eError || pError) {\n        this.setState({\n          emailError: eError,\n          passwordError: pError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      data: [],\n      email: '',\n      password: '',\n      emailError: \"\",\n      passwordError: \"\",\n      checked: true,\n      MockBack: false,\n      LoggedIn: false\n    };\n    this.SubmitForm = this.SubmitForm.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  SubmitForm(event) {\n    event.preventDefault();\n    const isValid = this.validate();\n\n    if (isValid) {\n      console.log(this.state); // clear form\n\n      this.setState({\n        emailError: ''\n      });\n      this.setState({\n        passwordError: ''\n      });\n    } else {\n      console.log('Invalid Form');\n    }\n\n    const {\n      email,\n      password,\n      MockBack,\n      data\n    } = this.state; // let found = data[0].email\n\n    if (email == 'found' && password == \"admin\" && MockBack) {\n      this.setState({\n        LoggedIn: true\n      });\n      sessionStorage.setItem(\"token\", \"asdfjfskfbsfgyfewjsfdk\");\n    } else if (!MockBack) {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Accept': 'application/json'\n        },\n        body: new URLSearchParams({\n          'email': email,\n          'password': password\n        })\n      };\n      console.log(requestOptions.body);\n      fetch('http://13.72.75.179/api/login', requestOptions).then(console.log(\"fetching successfuly\")).then(response => {\n        return response.json();\n        console.log(response);\n      }).then(token => {\n        sessionStorage.setItem('token', 'bearer ' + token);\n        this.setState({\n          LoggedIn: true\n        });\n      });\n    }\n\n    let token = sessionStorage.getItem('token');\n    console.log(token);\n  }\n\n  componentDidMount() {\n    if (this.state.MockBack) {\n      fetch('http://13.72.75.179/api/song/5e8c31dc3d162e0ea00780f3').then(response => {\n        return response.json();\n      }).then(users => {\n        this.setState({\n          data: users\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n\n    if (this.state.LoggedIn == true) {\n      // console.log(\"logged\")\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/WebFrame/FirstWebHome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Login_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.SubmitForm,\n      className: \"tl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"Login_inText\",\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Email address or username\",\n      className: \"form-control\",\n      value: this.state.email,\n      onChange: this.onLoginChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, this.state.emailError), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"Login_input\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      className: \"form-control\",\n      value: this.state.password,\n      onChange: this.onLoginChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, this.state.passwordError), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      class: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"Login_input_check\",\n      name: \"checked\",\n      value: this.state.checked,\n      onChange: event => this.onLoginChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Login_rememberme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, \" Remember me \"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"Login_button Login_button_login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, \"LOG IN\"))));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/rokaia/Documents/frontend/src/Components/LoginForm.js"],"names":["React","Component","Link","Redirect","LoginForm","constructor","props","onLoginChange","event","setState","target","name","value","console","log","state","data","validate","eError","pError","email","password","length","emailError","passwordError","checked","MockBack","LoggedIn","SubmitForm","bind","componentDidMount","preventDefault","isValid","sessionStorage","setItem","requestOptions","method","headers","body","URLSearchParams","fetch","then","response","json","token","getItem","users","render","fontSize","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Login.css';\r\nimport {Link , Redirect} from 'react-router-dom'\r\nclass LoginForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            data:[],\r\n            email:'',\r\n            password:'',\r\n            emailError: \"\",\r\n            passwordError: \"\",\r\n            checked:true,\r\n            MockBack: false,\r\n            LoggedIn: false\r\n        }\r\n        this.SubmitForm = this.SubmitForm.bind(this)\r\n        this.componentDidMount = this.componentDidMount.bind(this)\r\n    }\r\n    onLoginChange=(event)=>{\r\n        this.setState({[event.target.name]: event.target.value })\r\n        console.log(this.state.data)\r\n    }\r\n    validate = () => {\r\n        let eError='';\r\n        let pError='';\r\n        if (!this.state.email) {\r\n            eError='Please enter your username or email address.';\r\n        }\r\n        if (!this.state.password){\r\n            pError='Please enter your password.'; \r\n        }\r\n        if(this.state.password.length < 8 && this.state.password.length >= 1 ){\r\n            pError= 'The Password is too short.';\r\n        }\r\n        if(eError || pError){\r\n            this.setState({emailError: eError, passwordError:pError});\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    SubmitForm(event){\r\n        event.preventDefault()\r\n        const isValid = this.validate();\r\n        if (isValid) {\r\n        console.log(this.state);\r\n        // clear form\r\n        this.setState({emailError:''});\r\n        this.setState({passwordError:''});\r\n        }\r\n        else{\r\n            console.log('Invalid Form');\r\n        }\r\n        const {email , password, MockBack,data} = this.state\r\n        // let found = data[0].email\r\n        if (email == 'found' && password == \"admin\" && MockBack ){\r\n            this.setState({LoggedIn: true})\r\n            sessionStorage.setItem(\"token\",\"asdfjfskfbsfgyfewjsfdk\")\r\n        }\r\n        else if (!MockBack){\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { \r\n                'Content-Type': 'application/x-www-form-urlencoded',  \r\n                'Accept': 'application/json'},\r\n                body: new URLSearchParams({\r\n                    'email':email,\r\n                    'password':password})\r\n            };\r\n            console.log(requestOptions.body)\r\n            fetch('http://13.72.75.179/api/login', requestOptions)\r\n            .then(console.log(\"fetching successfuly\"))\r\n            .then(response => {\r\n                return response.json()\r\n                console.log(response)\r\n            })\r\n            .then((token)=>{\r\n                sessionStorage.setItem('token','bearer '+token)\r\n                this.setState({LoggedIn:true})\r\n            })\r\n        }\r\n    let token = sessionStorage.getItem('token')\r\n    console.log(token)\r\n    }\r\n    componentDidMount(){\r\n        if(this.state.MockBack){\r\n        fetch('http://13.72.75.179/api/song/5e8c31dc3d162e0ea00780f3')   \r\n\r\n        .then(response=> {\r\n\r\n            return response.json();\r\n        })\r\n        .then(users => {\r\n\r\n            this.setState({  data: users })\r\n        })\r\n        }\r\n    \r\n    }\r\n    render(){\r\n        const {data}=this.state\r\n        if (this.state.LoggedIn == true){\r\n            // console.log(\"logged\")\r\n            return <Redirect to='/WebFrame/FirstWebHome'></Redirect>\r\n        }\r\n        return(\r\n            <div className=\"Login_container\">            \r\n                <form onSubmit={this.SubmitForm} className='tl'>\r\n                    <div class=\"row\">\r\n                        <input\r\n                            className='Login_inText'\r\n                            type=\"text\"\r\n                            name='email'\r\n                            placeholder='Email address or username'\r\n                            className=\"form-control\"\r\n                            value={this.state.email}\r\n                            onChange={this.onLoginChange}\r\n                        />\r\n                    </div>\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.emailError}\r\n                    </div>\r\n                    <br></br>\r\n                    <div class=\"row\">\r\n                        <input\r\n                            className=\"Login_input\"\r\n                            type=\"password\"\r\n                            name='password'\r\n                            placeholder='Password'\r\n                            className=\"form-control\"\r\n                            value={this.state.password}\r\n                            onChange={this.onLoginChange}\r\n                        />\r\n                    </div>\r\n                    <div style={{ fontSize: 12, color: \"red\" }}>\r\n                        {this.state.passwordError}\r\n                    </div>\r\n                    <br></br>\r\n                    <div class=\"row\" class=\"form-check\" >\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            className=\"Login_input_check\" \r\n                            name='checked'\r\n                            value={this.state.checked}\r\n                            onChange={event=>this.onLoginChange(event)}\r\n                        />\r\n                        <label className='Login_rememberme' > Remember me </label>\r\n                        <button type='submit' className=\"Login_button Login_button_login\">LOG IN</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}