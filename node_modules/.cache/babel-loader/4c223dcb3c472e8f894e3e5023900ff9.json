{"ast":null,"code":"import _objectSpread from\"/home/rokaia/Documents/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{StreamSong}from'../Constants';import{UpdatePage}from'../Constants';var StreamInitialState={songs:[],id:'',image:'',title:'',description:''};export var StreamReducer=function StreamReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:StreamInitialState;var Action=arguments.length>1?arguments[1]:undefined;switch(Action.type){case StreamSong:return _objectSpread({},state,{songs:Action.payload});case UpdatePage:return _objectSpread({},state,{id:Action.payload.id,image:Action.payload.url,title:Action.payload.name,description:Action.payload.description});default:return state;}};","map":{"version":3,"sources":["/home/rokaia/Documents/frontend/src/Redux/songs/StreamReducer.js"],"names":["StreamSong","UpdatePage","StreamInitialState","songs","id","image","title","description","StreamReducer","state","Action","type","payload","url","name"],"mappings":"qJACA,OAAQA,UAAR,KAAyB,cAAzB,CACA,OAAQC,UAAR,KAAyB,cAAzB,CAGA,GAAMC,CAAAA,kBAAkB,CAAE,CACtBC,KAAK,CAAC,EADgB,CAEtBC,EAAE,CAAC,EAFmB,CAGtBC,KAAK,CAAC,EAHgB,CAItBC,KAAK,CAAC,EAJgB,CAKtBC,WAAW,CAAC,EALU,CAA1B,CAQA,MAAO,IAAMC,CAAAA,aAAa,CAAE,QAAfA,CAAAA,aAAe,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA5BP,kBAA4B,IAATQ,CAAAA,MAAS,2CAC3D,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKX,CAAAA,UAAL,CACA,wBACOS,KADP,EAEIN,KAAK,CAAEO,MAAM,CAACE,OAFlB,GAIA,IAAKX,CAAAA,UAAL,CACA,wBACOQ,KADP,EAEIL,EAAE,CAAEM,MAAM,CAACE,OAAP,CAAeR,EAFvB,CAGIC,KAAK,CAAEK,MAAM,CAACE,OAAP,CAAeC,GAH1B,CAIIP,KAAK,CAAEI,MAAM,CAACE,OAAP,CAAeE,IAJ1B,CAKIP,WAAW,CAAEG,MAAM,CAACE,OAAP,CAAeL,WALhC,GAOA,QAAS,MAAOE,CAAAA,KAAP,CAdb,CAgBH,CAjBM","sourcesContent":["\r\nimport {StreamSong} from '../Constants'\r\nimport {UpdatePage} from '../Constants'\r\n\r\n\r\nconst StreamInitialState ={\r\n    songs:[],\r\n    id:'',\r\n    image:'',\r\n    title:'',\r\n    description:''\r\n}\r\n\r\nexport const StreamReducer =(state=StreamInitialState,Action)=>{\r\n    switch(Action.type){\r\n        case StreamSong:\r\n        return {\r\n            ...state,\r\n            songs: Action.payload\r\n        }\r\n        case UpdatePage:\r\n        return {\r\n            ...state,\r\n            id: Action.payload.id,\r\n            image: Action.payload.url,\r\n            title: Action.payload.name,\r\n            description: Action.payload.description\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}