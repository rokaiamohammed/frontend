{"ast":null,"code":"var _jsxFileName = \"/home/rokaia/Documents/frontend/src/Containers/Playlist.js\";\nimport React, { Component } from 'react';\nimport PlaylistHeader from '../Components/PlaylistHeader';\nimport PlaylistCardList from '../Components/PlaylistCardList'; // import LikedSongsCard from '../Components/LikedSongsCard';\n//import LikedSongslist from '../Components/LikedSongslist';\n//import {playlistsdata} from '../Components/playlistsdata';\n\nimport { likedsongsdata } from '../Components/likedsongsdata';\nimport './Playlist.css'; // import MediaQuery from 'react-responsive';\n\nclass Playlist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.PlayMusic = event => {\n      this.setState({\n        CardID: event.target.getAttribute('idm')\n      });\n      console.log(\"Play the song\");\n      console.log(this.state.CardID);\n      console.log(this.state.playlistsdata[this.state.CardID - 1]);\n    };\n\n    this.state = {\n      playlistsdata: [],\n      likedsongsdata: likedsongsdata,\n      CardID: \" \" //likedsongsdata:[],\n\n    };\n  }\n\n  componentDidMount() {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'authorization': sessionStorage.getItem('token'),\n        'Accept': 'application/json'\n      }\n    }; // fetch('http://13.72.75.179/api/likedPlaylists',requestOptions)\n    // .then(response=>{\n    //   return response.json();\n    // })\n    // .then(users=>{\n    //   this.setState({playlistsdata:users});\n    //   console.log(\"fetching\")\n    // });\n\n    Promise.all([fetch('http://13.72.75.179/api/likedPlaylists', requestOptions), fetch('http://13.72.75.179/api/likedSongs', requestOptions)]).then(([res1, res2]) => Promise.all([res1.json(), res2.json()])).then(([res1, res2]) => this.setState({\n      playlistsdata: res1,\n      likedsongsdata: res2\n    }));\n  }\n\n  render() {\n    // console.log(this.state.playlistsdata.likedPlaylists)\n    const {\n      playlistsdata,\n      likedsongsdata\n    } = this.state;\n\n    if (playlistsdata.length === 0 || likedsongsdata.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"load1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"loader1 mr3 tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, \"loading, please wait..\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"vh-100 dt w-100\",\n        id: \"cardsplaylist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"pl3 fw7 pt5 f3 lh-title white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, \" Playlists\"), /*#__PURE__*/React.createElement(PlaylistCardList, {\n        Music: this.PlayMusic,\n        playlistsdata: playlistsdata,\n        likedsongsdata: likedsongsdata // likedPlaylists={likedPlaylists} \n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }));\n    }\n  }\n\n}\n\nexport default Playlist;","map":{"version":3,"sources":["/home/rokaia/Documents/frontend/src/Containers/Playlist.js"],"names":["React","Component","PlaylistHeader","PlaylistCardList","likedsongsdata","Playlist","constructor","props","PlayMusic","event","setState","CardID","target","getAttribute","console","log","state","playlistsdata","componentDidMount","requestOptions","method","headers","sessionStorage","getItem","Promise","all","fetch","then","res1","res2","json","render","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PlaylistHeader from '../Components/PlaylistHeader'\r\nimport PlaylistCardList from '../Components/PlaylistCardList';\r\n// import LikedSongsCard from '../Components/LikedSongsCard';\r\n//import LikedSongslist from '../Components/LikedSongslist';\r\n//import {playlistsdata} from '../Components/playlistsdata';\r\nimport {likedsongsdata} from '../Components/likedsongsdata';\r\n\r\nimport './Playlist.css'\r\n\r\n// import MediaQuery from 'react-responsive';\r\nclass Playlist extends Component {\r\n\r\n  constructor(props) {        \r\n    super(props)\r\n    this.state= {\r\n\r\n        playlistsdata:[],  \r\n        likedsongsdata:likedsongsdata ,\r\n        CardID:\" \",                      \r\n        //likedsongsdata:[],\r\n       }\r\n}\r\n\r\ncomponentDidMount(){\r\n\r\n\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: { \r\n    'Content-Type': 'application/x-www-form-urlencoded',  \r\n    'authorization': sessionStorage.getItem('token'),\r\n    'Accept': 'application/json'},\r\n    }\r\n\r\n// fetch('http://13.72.75.179/api/likedPlaylists',requestOptions)\r\n\r\n// .then(response=>{\r\n//   return response.json();\r\n// })\r\n// .then(users=>{\r\n//   this.setState({playlistsdata:users});\r\n//   console.log(\"fetching\")\r\n// });\r\n\r\nPromise.all([\r\n  fetch('http://13.72.75.179/api/likedPlaylists',requestOptions),\r\n  fetch('http://13.72.75.179/api/likedSongs',requestOptions)\r\n])\r\n\r\n.then(([res1, res2]) => Promise.all([res1.json(), res2.json()]))\r\n\r\n.then(([res1, res2]) => this.setState({\r\n  playlistsdata: res1, \r\n  likedsongsdata: res2\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nPlayMusic =(event) =>{                                            \r\n  this.setState({ CardID: event.target.getAttribute('idm') })\r\n\r\n  console.log(\"Play the song\")  \r\n  console.log(this.state.CardID)  \r\n  console.log(this.state.playlistsdata[(this.state.CardID)-1])\r\n\r\n                                                                  \r\n}\r\n\r\n  render() {\r\n\r\n    // console.log(this.state.playlistsdata.likedPlaylists)\r\n\r\n    const {playlistsdata,likedsongsdata} =this.state\r\n\r\n    if(playlistsdata.length===0 || likedsongsdata.length===0){\r\n    \r\n        return(\r\n        <div className=\"load1\">\r\n            <p><p className=\"loader1 mr3 tc\"></p>\r\n            <h3 >loading, please wait..</h3></p>\r\n        </div>)\r\n    }\r\n\r\n\r\n    else {\r\n\r\n    return (\r\n\r\n      <div className=\"vh-100 dt w-100\" id=\"cardsplaylist\">\r\n          {/* <PlaylistHeader></PlaylistHeader> */}\r\n\r\n                <h1 className='pl3 fw7 pt5 f3 lh-title white'> Playlists</h1>\r\n\r\n\r\n                <PlaylistCardList \r\n                Music={this.PlayMusic}\r\n                playlistsdata={playlistsdata} \r\n\r\n                likedsongsdata={likedsongsdata} \r\n\r\n                // likedPlaylists={likedPlaylists} \r\n                ></PlaylistCardList>\r\n               \r\n\r\n      </div>\r\n\r\n          );\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Playlist;\r\n"]},"metadata":{},"sourceType":"module"}